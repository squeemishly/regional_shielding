{
  "version": 4,
  "terraform_version": "1.3.7",
  "serial": 37,
  "lineage": "9d1bfb64-307e-c35d-74a4-f4508f7dc1d6",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "fastly_service_vcl",
      "name": "region-shielding-test",
      "provider": "provider[\"registry.terraform.io/fastly/fastly\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": [],
            "activate": true,
            "active_version": 19,
            "backend": [
              {
                "address": "192.0.2.0",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "dummy_cgh",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "cgh-saopaulo-br",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": false,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": true,
                "weight": 100
              },
              {
                "address": "192.0.2.0",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "dummy_fra",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "frankfurt-de",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": false,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": true,
                "weight": 100
              },
              {
                "address": "192.0.2.0",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "dummy_hnd",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "hnd-tokyo-jp",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": false,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": true,
                "weight": 100
              },
              {
                "address": "192.0.2.0",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "dummy_iad",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "iad-va-us",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": false,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": true,
                "weight": 100
              },
              {
                "address": "192.0.2.0",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "dummy_lhr",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "lon-london-uk",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": false,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": true,
                "weight": 100
              },
              {
                "address": "192.0.2.0",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "dummy_syd",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "sydney-au",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": false,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": true,
                "weight": 100
              },
              {
                "address": "httpbin.org",
                "auto_loadbalance": false,
                "between_bytes_timeout": 10000,
                "connect_timeout": 1000,
                "error_threshold": 0,
                "first_byte_timeout": 15000,
                "healthcheck": "",
                "max_conn": 200,
                "max_tls_version": "",
                "min_tls_version": "",
                "name": "HTTPbin",
                "override_host": "",
                "port": 443,
                "request_condition": "",
                "shield": "",
                "ssl_ca_cert": "",
                "ssl_cert_hostname": "",
                "ssl_check_cert": true,
                "ssl_ciphers": "",
                "ssl_client_cert": "",
                "ssl_client_key": "",
                "ssl_sni_hostname": "",
                "use_ssl": false,
                "weight": 100
              }
            ],
            "cache_setting": [],
            "cloned_version": 19,
            "comment": "Managed by Terraform",
            "condition": [],
            "default_host": "",
            "default_ttl": 3600,
            "dictionary": [],
            "director": [],
            "domain": [
              {
                "comment": "Terraform Demo",
                "name": "squee-region-routing-test.global.ssl.fastly.net"
              }
            ],
            "dynamicsnippet": [],
            "force_destroy": null,
            "force_refresh": false,
            "gzip": [],
            "header": [],
            "healthcheck": [],
            "id": "Brmr83ifWTTouWka20Ttw4",
            "imported": false,
            "logging_bigquery": [],
            "logging_blobstorage": [],
            "logging_cloudfiles": [],
            "logging_datadog": [],
            "logging_digitalocean": [],
            "logging_elasticsearch": [],
            "logging_ftp": [],
            "logging_gcs": [],
            "logging_googlepubsub": [],
            "logging_heroku": [],
            "logging_honeycomb": [],
            "logging_https": [],
            "logging_kafka": [],
            "logging_kinesis": [],
            "logging_logentries": [],
            "logging_loggly": [],
            "logging_logshuttle": [],
            "logging_newrelic": [],
            "logging_openstack": [],
            "logging_papertrail": [],
            "logging_s3": [],
            "logging_scalyr": [],
            "logging_sftp": [],
            "logging_splunk": [],
            "logging_sumologic": [],
            "logging_syslog": [],
            "name": "shielding by region",
            "request_setting": [],
            "response_object": [],
            "reuse": null,
            "snippet": [],
            "stale_if_error": false,
            "stale_if_error_ttl": 43200,
            "vcl": [
              {
                "content": "director default_shield fallback {\n    { .backend = ssl_shield_iad_va_us; }\n}\n\ndirector cgh_shield fallback {\n    { .backend = ssl_shield_cgh_saopaulo_br; }\n    { .backend = ssl_shield_iad_va_us; }\n}\n\ndirector syd_shield fallback {\n    { .backend = ssl_shield_sydney_au; }\n    { .backend = ssl_shield_iad_va_us; }\n}\n\ndirector lon_shield fallback {\n    { .backend = ssl_shield_lon_london_uk; }\n    { .backend = ssl_shield_iad_va_us; }\n}\n\ndirector hnd_shield fallback {\n    { .backend = ssl_shield_hnd_tokyo_jp; }\n    { .backend = ssl_shield_iad_va_us; }\n}\n\ndirector fra_shield fallback {\n    { .backend = ssl_shield_frankfurt_de; }\n    { .backend = ssl_shield_iad_va_us; }\n}",
                "main": false,
                "name": "directors"
              },
              {
                "content": "include \"directors\"\ninclude \"shielding\"\n\nsub vcl_recv {\n#FASTLY recv\n\n  # Normally, you should consider requests other than GET and HEAD to be uncacheable\n  # (to this we add the special FASTLYPURGE method)\n  if (req.method != \"HEAD\" \u0026\u0026 req.method != \"GET\" \u0026\u0026 req.method != \"FASTLYPURGE\") {\n    return(pass);\n  }\n\n  set req.http.all-kitties = \"boudi pippin ari\";\n\n  if (req.restarts == 0) {\n    declare local var.shield STRING;\n\n        set var.shield = table.lookup(region_shielding, server.region);\n        if (var.shield == \"\"){\n          if (server.datacenter == \"IAD\") {\n            set req.backend = F_HTTPbin;\n          } else {\n            set req.backend = default_shield;\n          }\n        } else if (var.shield == server.datacenter) {\n          set req.backend = default_shield;\n        } else {\n          set req.backend = table.lookup_backend(site_shield, var.shield, default_shield);\n        }\n  }\n\n  return(lookup);\n}\n\nsub vcl_hash {\n  set req.hash += req.url;\n  set req.hash += req.http.host;\n  #FASTLY hash\n  return(hash);\n}\n\nsub vcl_hit {\n#FASTLY hit\n  return(deliver);\n}\n\nsub vcl_miss {\n#FASTLY miss\n  return(fetch);\n}\n\nsub vcl_pass {\n#FASTLY pass\n  return(pass);\n}\n\nsub vcl_fetch {\n#FASTLY fetch\n\n  # Unset headers that reduce cacheability for images processed using the Fastly image optimizer\n  if (req.http.X-Fastly-Imageopto-Api) {\n    unset beresp.http.Set-Cookie;\n    unset beresp.http.Vary;\n  }\n\n  # Log the number of restarts for debugging purposes\n  if (req.restarts \u003e 0) {\n    set beresp.http.Fastly-Restarts = req.restarts;\n  }\n\n  # If the response is setting a cookie, make sure it is not cached\n  if (beresp.http.Set-Cookie) {\n    return(pass);\n  }\n\n  # By default we set a TTL based on the `Cache-Control` header but we don't parse additional directives\n  # like `private` and `no-store`.  Private in particular should be respected at the edge:\n  if (beresp.http.Cache-Control ~ \"(private|no-store)\") {\n    return(pass);\n  }\n\n  # If no TTL has been provided in the response headers, set a default\n  if (!beresp.http.Expires \u0026\u0026 !beresp.http.Surrogate-Control ~ \"max-age\" \u0026\u0026 !beresp.http.Cache-Control ~ \"(s-maxage|max-age)\") {\n    set beresp.ttl = 3600s;\n\n    # Apply a longer default TTL for images processed using Image Optimizer\n    if (req.http.X-Fastly-Imageopto-Api) {\n      set beresp.ttl = 2592000s; # 30 days\n      set beresp.http.Cache-Control = \"max-age=2592000, public\";\n    }\n  }\n\n  return(deliver);\n}\n\nsub vcl_error {\n#FASTLY error\n  return(deliver);\n}\n\nsub vcl_deliver {\n#FASTLY deliver\n  return(deliver);\n}\n\nsub vcl_log {\n#FASTLY log\n}",
                "main": true,
                "name": "main"
              },
              {
                "content": "table site_shield BACKEND {\n  \"SYD\": syd_shield,\n  \"LON\": lon_shield,\n  \"HND\": hnd_shield,\n  \"FRA\": fra_shield,\n  \"CGH\": cgh_shield,\n  \"IAD\": default_shield,\n}\n\ntable region_shielding {\n  \"SA-North\"     : \"CGH\",\n  \"SA-South\"     : \"CGH\",\n  \"SA-East\"      : \"CGH\",\n  \"APAC\"         : \"SYD\",\n  \"EU-West\"      : \"LON\",\n  \"EU-East\"      : \"FRA\",\n  \"EU-Central\"   : \"FRA\",\n  \"South-Africa\" : \"LON\",\n  \"AF-West\"      : \"LON\",\n  \"Asia-South\"   : \"HND\",\n  \"Asia\"         : \"HND\",\n}",
                "main": false,
                "name": "shielding"
              }
            ],
            "version_comment": "",
            "waf": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
